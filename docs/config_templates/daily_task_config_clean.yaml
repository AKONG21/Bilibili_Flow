# 🚀 B站每日任务数据采集配置文件
# 支持多账号Cookie管理、智能过期检测、自动故障切换

# 📋 任务配置
daily_task:
  # 🎯 UP主ID（必填）
  up_id: "1140672573"
  
  # ⏰ 时间范围配置
  time_range:
    # 采集天数（从今天往前推算）
    days: 28
    # 或者指定具体日期范围（优先级高于days）
    # start_date: "2025-06-28"  # 格式：YYYY-MM-DD
    # end_date: "2025-07-26"    # 格式：YYYY-MM-DD

  # 👤 UP主信息字段控制（只在开头出现一次）
  up_fields:
    enabled: true          # 🔧 是否收集UP主信息
    mid: true              # UP主ID
    name: true             # UP主昵称
    fans: true             # 粉丝数
    up_video_count: true   # 视频总数
    sign: false            # 个人签名
    level: false           # 等级
    official_verify: false # 认证信息

  # 🎬 视频信息字段控制（每个视频的字段）
  video_fields:
    enabled: true          # 🔧 是否收集视频信息
    # 基础视频信息
    video_id: true         # 视频ID (aid)
    aid: true              # 视频AV号
    bvid: false            # 视频BV号
    title: true            # 视频标题
    description: true      # 视频描述
    cover_url: true        # 封面URL
    video_url: true        # 视频链接
    duration: true         # 视频时长（自动格式化为 HH:MM:SS）
    category: true         # 分区名称
    publish_time: true     # 发布时间（自动格式化为ISO格式）
    
    # 📊 统计数据字段
    stats_fields:
      enabled: true        # 🔧 是否收集统计数据
      view: true           # 播放量
      like: true           # 点赞数
      coin: true           # 投币数
      favorite: true       # 收藏数
      share: true          # 分享数
      reply: true          # 评论数
      danmaku: true        # 弹幕数

  # 💬 热门评论配置
  hot_comments_json:
    enabled: true          # 🔧 是否生成热门评论JSON
    max_count: 10          # 最多10条热评
    fields:                # JSON中包含的字段
      - "message"          # 评论内容
      - "mid"              # 评论者ID
      - "ctime"            # 评论时间（自动格式化为ISO格式）
      - "like"             # 点赞数
      - "rcount"           # 回复数

# ⚙️ 系统配置
system:
  # 📝 日志级别：DEBUG, INFO, WARNING, ERROR
  log_level: "INFO"
  
  # ⏱️ 请求延时（秒，避免请求过频）
  request_delay: 2
  
  # 🔄 重试配置
  retry:
    max_attempts: 3        # 最大重试次数
    delay_between_retries: 5  # 重试间隔（秒）
  
  # 🌐 浏览器配置
  browser:
    headless: false        # 是否无头模式（有Cookie时自动切换为true）
    timeout: 30            # 页面超时时间（秒）
    user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"

# 💾 存储配置
storage:
  # 📁 数据存储目录（已自动分类：日任务存储到data/daily/周文件夹，月任务存储到data/monthly）
  # data_dir: "data"  # 已废弃，存储路径由任务类型自动决定

  # 📄 文件命名格式（已自动根据任务类型设置）
  # filename_format: "daily_task_{timestamp}_{up_id}.json"  # 已废弃，由任务配置决定

  # 🗜️ 数据压缩
  compress: false

# 🍪 登录和Cookie管理配置
login:
  # 🍪 多账号Cookie管理配置
  cookies:
    # 📝 单个Cookie字符串（向后兼容，优先级较低）
    # 格式：SESSDATA=xxx; bili_jct=xxx; DedeUserID=xxx; DedeUserID__ckMd5=xxx
    raw_cookie: ""
    
    # 🎯 多账号Cookie池（推荐使用，支持自动轮换和故障切换）
    cookie_pool:
      enabled: false        # 🔧 是否启用Cookie池（首次运行建议设为false，扫码后自动启用）
      
      # 🎲 Cookie选择策略：
      # - random: 随机选择（推荐，避免检测）
      # - round_robin: 轮询选择（均匀使用所有账号）
      # - priority: 优先级选择（按priority数值从小到大使用）
      selection_mode: "random"
      
      # 📋 Cookie账号列表（扫码登录后自动添加，最多支持5个账号）
      cookies: []
        # 🔍 Cookie结构说明（自动生成，无需手动编辑）：
        # - name: "scan_0726_1234"        # 账号名称（自动生成：scan_月日_时分）
        # - cookie: "SESSDATA=xxx; ..."   # 完整Cookie字符串（扫码后自动提取）
        # - priority: 1                   # 优先级（数字越小优先级越高）
        # - enabled: true                 # 是否启用（失败过多自动禁用）
        # - last_used: ""                 # 最后使用时间（自动更新）
        # - failure_count: 0              # 失败次数（自动统计）
        # - max_failures: 3               # 最大失败次数（超过后自动禁用）
  
  # 🧠 智能过期检测配置
  smart_expiry_detection:
    enabled: true           # 🔧 是否启用智能检测
    check_interval_hours: 6 # ⏰ 检查间隔（小时）
    auto_switch_on_failure: true  # 🔄 失败时自动切换Cookie
    auto_disable_failed: true     # 🚫 自动禁用失败的Cookie
    health_check_endpoints:       # 🏥 健康检查端点
      - "https://api.bilibili.com/x/web-interface/nav"
      - "https://api.bilibili.com/x/space/myinfo"
  
  # 📂 备用Cookie存储目录
  backup_cookies_dir: "cookies/backup_cookies"
  
  # ⏰ Cookie过期检查间隔（小时）- 向后兼容
  cookie_check_interval: 24
  
  # 🔐 自动登录配置
  auto_login:
    enabled: true          # 🔧 是否启用自动登录
    timeout: 300           # ⏱️ 登录超时时间（秒）

# 📖 使用说明：
# 1. 🚀 首次运行：直接运行 python run_daily_task.py
# 2. 📱 扫码登录：程序会自动打开浏览器，扫码完成登录
# 3. 🍪 自动保存：Cookie会自动保存到配置文件和备份目录
# 4. 🔄 后续运行：程序会自动使用保存的Cookie，无需重新登录
# 5. 🛠️ Cookie管理：使用 python cookie_manager_tool.py 管理Cookie
# 6. 📊 状态监控：每次运行时会显示Cookie状态和数量提醒
# 7. 🧹 自动清理：过期Cookie和备份文件会自动清理

# 💡 高级功能：
# - 多账号轮换：支持最多5个账号自动轮换使用
# - 智能故障切换：Cookie失效时自动切换到其他可用账号
# - 过期自动检测：定期检查Cookie有效性，自动禁用失效账号
# - 无头模式切换：有有效Cookie时自动切换为无头模式运行
