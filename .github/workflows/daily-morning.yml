name: Daily Data Collection - Morning (08:07)

on:
  schedule:
    # UTC 时间 00:07 = 北京时间 08:07 (避免冲突)
    - cron: '7 0 * * *'
  workflow_dispatch:

jobs:
  morning-data-collection:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Playwright browsers
      run: |
        playwright install chromium
        
    - name: Configure git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
    - name: Enhanced cookie rotation and selection
      env:
        BILIBILI_COOKIES: ${{ secrets.BILIBILI_COOKIES }}
        BILIBILI_COOKIES_1: ${{ secrets.BILIBILI_COOKIES_1 }}
        BILIBILI_COOKIES_2: ${{ secrets.BILIBILI_COOKIES_2 }}
        BILIBILI_COOKIES_3: ${{ secrets.BILIBILI_COOKIES_3 }}
        BILIBILI_COOKIES_4: ${{ secrets.BILIBILI_COOKIES_4 }}
        BILIBILI_COOKIES_5: ${{ secrets.BILIBILI_COOKIES_5 }}
        BILIBILI_COOKIES_6: ${{ secrets.BILIBILI_COOKIES_6 }}
        BILIBILI_COOKIES_7: ${{ secrets.BILIBILI_COOKIES_7 }}
        BILIBILI_COOKIES_8: ${{ secrets.BILIBILI_COOKIES_8 }}
        BILIBILI_COOKIES_9: ${{ secrets.BILIBILI_COOKIES_9 }}
        BILIBILI_COOKIES_10: ${{ secrets.BILIBILI_COOKIES_10 }}
      run: |
        echo "🔄 Starting enhanced cookie rotation with fallback mechanism"
        python .github/scripts/enhanced_cookie_rotation.py
        
    - name: Cookie cleanup check
      if: always()
      run: |
        echo "🗑️ Checking for failed cookies cleanup"
        python .github/scripts/cookie_cleanup_manager.py || echo "Cleanup check completed with warnings"
        
    - name: Run morning data collection with enhanced notification
      env:
        FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
        PYTHONPATH: ${{ github.workspace }}
      run: |
        echo "Starting morning data collection with enhanced notification"
        echo "Current working directory: $(pwd)"
        echo "Python path: $PYTHONPATH"
        
        # 直接运行日任务
        if ! python run_daily_task.py; then
          echo "❌ Morning data collection failed"
          echo "Checking for any generated files:"
          find . -name "*.json" -o -name "*.db" | head -10
          exit 1
        else
          echo "✅ Morning data collection completed"
          echo "Checking generated data files:"
          find data/ -type f | head -10
        fi
        
    - name: Commit and push data
      run: |
        # Check if data directory exists and has files
        if [ -d "data/" ] && [ "$(find data/ -type f | wc -l)" -gt 0 ]; then
          git add data/
          if ! git diff --staged --quiet; then
            git commit -m "🌅 Morning data collection - $(date +'%Y-%m-%d %H:%M:%S')"
            git push
            echo "✅ Data committed and pushed successfully"
          else
            echo "ℹ️ No changes to commit in data directory"
          fi
        else
          echo "⚠️ Data directory is empty or doesn't exist - no data to commit"
        fi
        
    - name: Prepare and upload cookie management reports
      if: always()
      run: |
        # Create placeholder files if they don't exist
        touch cookie_management_report.json
        touch cookie_cleanup_report.json  
        touch failed_cookies_report.json
        touch cleanup_cookies.sh
        
        # Add basic content to empty files
        [ ! -s cookie_management_report.json ] && echo '{"status": "no_report_generated", "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"}' > cookie_management_report.json
        [ ! -s cookie_cleanup_report.json ] && echo '{"status": "no_cleanup_performed", "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"}' > cookie_cleanup_report.json
        [ ! -s failed_cookies_report.json ] && echo '{"failed_cookies": [], "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"}' > failed_cookies_report.json
        [ ! -s cleanup_cookies.sh ] && echo '#!/bin/bash\necho "No cleanup script generated - '$(date)'"' > cleanup_cookies.sh
        
    - name: Upload cookie management reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cookie-reports-morning-${{ github.run_number }}
        path: |
          cookie_management_report.json
          cookie_cleanup_report.json
          failed_cookies_report.json
          cleanup_cookies.sh
        retention-days: 30