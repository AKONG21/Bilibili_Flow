name: Weekly Historical Data Processing

on:
  schedule:
    # UTC 时间 00:00 每周五 = 北京时间 08:00 每周五
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:
  weekly-historical-processing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Playwright browsers
      run: |
        playwright install chromium
        
    - name: Configure git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
    - name: Enhanced cookie rotation and selection
      env:
        BILIBILI_COOKIES: ${{ secrets.BILIBILI_COOKIES }}
        BILIBILI_COOKIES_1: ${{ secrets.BILIBILI_COOKIES_1 }}
        BILIBILI_COOKIES_2: ${{ secrets.BILIBILI_COOKIES_2 }}
        BILIBILI_COOKIES_3: ${{ secrets.BILIBILI_COOKIES_3 }}
        BILIBILI_COOKIES_4: ${{ secrets.BILIBILI_COOKIES_4 }}
        BILIBILI_COOKIES_5: ${{ secrets.BILIBILI_COOKIES_5 }}
        BILIBILI_COOKIES_6: ${{ secrets.BILIBILI_COOKIES_6 }}
        BILIBILI_COOKIES_7: ${{ secrets.BILIBILI_COOKIES_7 }}
        BILIBILI_COOKIES_8: ${{ secrets.BILIBILI_COOKIES_8 }}
        BILIBILI_COOKIES_9: ${{ secrets.BILIBILI_COOKIES_9 }}
        BILIBILI_COOKIES_10: ${{ secrets.BILIBILI_COOKIES_10 }}
      run: |
        echo "🔄 Starting enhanced cookie rotation with fallback mechanism"
        python .github/scripts/enhanced_cookie_rotation.py
        
    - name: Cookie cleanup check
      if: always()
      run: |
        echo "🗑️ Checking for failed cookies cleanup"
        python .github/scripts/cookie_cleanup_manager.py || echo "Cleanup check completed with warnings"
        
    - name: Run monthly historical data processing with enhanced notification
      env:
        FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
      run: |
        echo "Starting weekly historical data processing with enhanced notification"
        python .github/scripts/feishu_notifier.py "📊 历史数据处理" python run_monthly_task.py
        
    - name: Commit and push data
      run: |
        git add data/
        if ! git diff --staged --quiet; then
          git commit -m "📊 Weekly historical data processing - $(date +'%Y-%m-%d %H:%M:%S')"
          git push
        else
          echo "No changes to commit"
        fi
        
    - name: Generate data summary report
      if: always()
      run: |
        echo "## Weekly Data Processing Report - $(date +'%Y-%m-%d')" > weekly_report.md
        echo "### Processing Summary" >> weekly_report.md
        
        # Check if the main process succeeded
        if [ "${{ job.status }}" = "success" ]; then
          echo "- ✅ Full historical data collection completed" >> weekly_report.md
          echo "- ✅ 28-day segmentation applied" >> weekly_report.md
          echo "- ✅ Database baseline established" >> weekly_report.md
        else
          echo "- ❌ Historical data processing encountered errors" >> weekly_report.md
          echo "- ⚠️ Check workflow logs for details" >> weekly_report.md
        fi
        
        echo "### File Structure" >> weekly_report.md
        if [ -d "data/" ]; then
          find data/ -name "*.json" | head -10 >> weekly_report.md || echo "No JSON files found" >> weekly_report.md
        else
          echo "Data directory not found" >> weekly_report.md
        fi
        
        # Create placeholder files if they don't exist
        touch cookie_management_report.json
        touch cookie_cleanup_report.json  
        touch failed_cookies_report.json
        touch cleanup_cookies.sh
        
        # Add basic content to empty files
        [ ! -s cookie_management_report.json ] && echo '{"status": "no_report_generated"}' > cookie_management_report.json
        [ ! -s cookie_cleanup_report.json ] && echo '{"status": "no_cleanup_performed"}' > cookie_cleanup_report.json
        [ ! -s failed_cookies_report.json ] && echo '{"failed_cookies": []}' > failed_cookies_report.json
        [ ! -s cleanup_cookies.sh ] && echo '#!/bin/bash\necho "No cleanup script generated"' > cleanup_cookies.sh
        
    - name: Upload report and cookie reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: weekly-report-${{ github.run_number }}
        path: |
          weekly_report.md
          cookie_management_report.json
          cookie_cleanup_report.json
          failed_cookies_report.json
          cleanup_cookies.sh
        retention-days: 30